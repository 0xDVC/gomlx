// Code generated by "stringer -type NodeType -trimprefix NodeType gen_backend_ops.go"; DO NOT EDIT.

package graph

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NodeTypeInvalid-0]
	_ = x[NodeTypeSplitNode-1]
	_ = x[NodeTypeAbs-2]
	_ = x[NodeTypeAdd-3]
	_ = x[NodeTypeAnd-4]
	_ = x[NodeTypeArgMinMax-5]
	_ = x[NodeTypeBatchNormInference-6]
	_ = x[NodeTypeBroadcast-7]
	_ = x[NodeTypeBroadcastInDim-8]
	_ = x[NodeTypeCeil-9]
	_ = x[NodeTypeClz-10]
	_ = x[NodeTypeComplex-11]
	_ = x[NodeTypeConcatenate-12]
	_ = x[NodeTypeConj-13]
	_ = x[NodeTypeConstant-14]
	_ = x[NodeTypeConvGeneralDilated-15]
	_ = x[NodeTypeConvertDType-16]
	_ = x[NodeTypeCos-17]
	_ = x[NodeTypeDiv-18]
	_ = x[NodeTypeDot-19]
	_ = x[NodeTypeDotGeneral-20]
	_ = x[NodeTypeEqual-21]
	_ = x[NodeTypeEqualTotalOrder-22]
	_ = x[NodeTypeExp-23]
	_ = x[NodeTypeExpm1-24]
	_ = x[NodeTypeFFT-25]
	_ = x[NodeTypeFloor-26]
	_ = x[NodeTypeGather-27]
	_ = x[NodeTypeGreaterOrEqual-28]
	_ = x[NodeTypeGreaterOrEqualTotalOrder-29]
	_ = x[NodeTypeGreaterThan-30]
	_ = x[NodeTypeGreaterThanTotalOrder-31]
	_ = x[NodeTypeIdentity-32]
	_ = x[NodeTypeImag-33]
	_ = x[NodeTypeIota-34]
	_ = x[NodeTypeLessOrEqual-35]
	_ = x[NodeTypeLessOrEqualTotalOrder-36]
	_ = x[NodeTypeLessThan-37]
	_ = x[NodeTypeLessThanTotalOrder-38]
	_ = x[NodeTypeLog-39]
	_ = x[NodeTypeLog1p-40]
	_ = x[NodeTypeLogicalNot-41]
	_ = x[NodeTypeLogistic-42]
	_ = x[NodeTypeMax-43]
	_ = x[NodeTypeMin-44]
	_ = x[NodeTypeMul-45]
	_ = x[NodeTypeNeg-46]
	_ = x[NodeTypeNotEqual-47]
	_ = x[NodeTypeNotEqualTotalOrder-48]
	_ = x[NodeTypeOr-49]
	_ = x[NodeTypePad-50]
	_ = x[NodeTypeParameter-51]
	_ = x[NodeTypePow-52]
	_ = x[NodeTypeReal-53]
	_ = x[NodeTypeReduceMax-54]
	_ = x[NodeTypeReduceMin-55]
	_ = x[NodeTypeReduceProduct-56]
	_ = x[NodeTypeReduceSum-57]
	_ = x[NodeTypeReduceWindow-58]
	_ = x[NodeTypeRem-59]
	_ = x[NodeTypeReshape-60]
	_ = x[NodeTypeReverse-61]
	_ = x[NodeTypeRngBitGenerator-62]
	_ = x[NodeTypeRound-63]
	_ = x[NodeTypeRsqrt-64]
	_ = x[NodeTypeScatterAdd-65]
	_ = x[NodeTypeScatterMax-66]
	_ = x[NodeTypeScatterMin-67]
	_ = x[NodeTypeSelectAndScatterMax-68]
	_ = x[NodeTypeSelectAndScatterMin-69]
	_ = x[NodeTypeSelectAndScatterSum-70]
	_ = x[NodeTypeSign-71]
	_ = x[NodeTypeSin-72]
	_ = x[NodeTypeSlice-73]
	_ = x[NodeTypeSqrt-74]
	_ = x[NodeTypeSub-75]
	_ = x[NodeTypeTanh-76]
	_ = x[NodeTypeTranspose-77]
	_ = x[NodeTypeWhere-78]
	_ = x[NodeTypeXor-79]
}

const _NodeType_name = "InvalidSplitNodeAbsAddAndArgMinMaxBatchNormInferenceBroadcastBroadcastInDimCeilClzComplexConcatenateConjConstantConvGeneralDilatedConvertDTypeCosDivDotDotGeneralEqualEqualTotalOrderExpExpm1FFTFloorGatherGreaterOrEqualGreaterOrEqualTotalOrderGreaterThanGreaterThanTotalOrderIdentityImagIotaLessOrEqualLessOrEqualTotalOrderLessThanLessThanTotalOrderLogLog1pLogicalNotLogisticMaxMinMulNegNotEqualNotEqualTotalOrderOrPadParameterPowRealReduceMaxReduceMinReduceProductReduceSumReduceWindowRemReshapeReverseRngBitGeneratorRoundRsqrtScatterAddScatterMaxScatterMinSelectAndScatterMaxSelectAndScatterMinSelectAndScatterSumSignSinSliceSqrtSubTanhTransposeWhereXor"

var _NodeType_index = [...]uint16{0, 7, 16, 19, 22, 25, 34, 52, 61, 75, 79, 82, 89, 100, 104, 112, 130, 142, 145, 148, 151, 161, 166, 181, 184, 189, 192, 197, 203, 217, 241, 252, 273, 281, 285, 289, 300, 321, 329, 347, 350, 355, 365, 373, 376, 379, 382, 385, 393, 411, 413, 416, 425, 428, 432, 441, 450, 463, 472, 484, 487, 494, 501, 516, 521, 526, 536, 546, 556, 575, 594, 613, 617, 620, 625, 629, 632, 636, 645, 650, 653}

func (i NodeType) String() string {
	if i < 0 || i >= NodeType(len(_NodeType_index)-1) {
		return "NodeType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NodeType_name[_NodeType_index[i]:_NodeType_index[i+1]]
}
