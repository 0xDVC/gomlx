/***** File generated by ./internal/cmd/simplego_dispatcher. Don't edit it directly. *****/

package simplego

import (
	"github.com/gomlx/gopjrt/dtypes"
	"github.com/gomlx/gopjrt/dtypes/bfloat16"
)

func init() {

	// DTypeDispatcher: dispatchBroadcast
	dispatchBroadcast.RegisterIfNotSet(dtypes.Int8, execBroadcastGeneric[int8])
	dispatchBroadcast.RegisterIfNotSet(dtypes.Int16, execBroadcastGeneric[int16])
	dispatchBroadcast.RegisterIfNotSet(dtypes.Int32, execBroadcastGeneric[int32])
	dispatchBroadcast.RegisterIfNotSet(dtypes.Int64, execBroadcastGeneric[int64])
	dispatchBroadcast.RegisterIfNotSet(dtypes.Uint8, execBroadcastGeneric[uint8])
	dispatchBroadcast.RegisterIfNotSet(dtypes.Uint16, execBroadcastGeneric[uint16])
	dispatchBroadcast.RegisterIfNotSet(dtypes.Uint32, execBroadcastGeneric[uint32])
	dispatchBroadcast.RegisterIfNotSet(dtypes.Uint64, execBroadcastGeneric[uint64])
	dispatchBroadcast.RegisterIfNotSet(dtypes.Float32, execBroadcastGeneric[float32])
	dispatchBroadcast.RegisterIfNotSet(dtypes.Float64, execBroadcastGeneric[float64])
	dispatchBroadcast.RegisterIfNotSet(dtypes.BFloat16, execBroadcastGeneric[bfloat16.BFloat16])
	dispatchBroadcast.RegisterIfNotSet(dtypes.Bool, execBroadcastGeneric[bool])

	// DTypeDispatcher: dispatchBroadcastInDim
	dispatchBroadcastInDim.RegisterIfNotSet(dtypes.Int8, execBroadcastInDimGeneric[int8])
	dispatchBroadcastInDim.RegisterIfNotSet(dtypes.Int16, execBroadcastInDimGeneric[int16])
	dispatchBroadcastInDim.RegisterIfNotSet(dtypes.Int32, execBroadcastInDimGeneric[int32])
	dispatchBroadcastInDim.RegisterIfNotSet(dtypes.Int64, execBroadcastInDimGeneric[int64])
	dispatchBroadcastInDim.RegisterIfNotSet(dtypes.Uint8, execBroadcastInDimGeneric[uint8])
	dispatchBroadcastInDim.RegisterIfNotSet(dtypes.Uint16, execBroadcastInDimGeneric[uint16])
	dispatchBroadcastInDim.RegisterIfNotSet(dtypes.Uint32, execBroadcastInDimGeneric[uint32])
	dispatchBroadcastInDim.RegisterIfNotSet(dtypes.Uint64, execBroadcastInDimGeneric[uint64])
	dispatchBroadcastInDim.RegisterIfNotSet(dtypes.Float32, execBroadcastInDimGeneric[float32])
	dispatchBroadcastInDim.RegisterIfNotSet(dtypes.Float64, execBroadcastInDimGeneric[float64])
	dispatchBroadcastInDim.RegisterIfNotSet(dtypes.BFloat16, execBroadcastInDimGeneric[bfloat16.BFloat16])
	dispatchBroadcastInDim.RegisterIfNotSet(dtypes.Bool, execBroadcastInDimGeneric[bool])

	// DTypeDispatcher: dispatchIota
	dispatchIota.RegisterIfNotSet(dtypes.Int8, execIotaGeneric[int8])
	dispatchIota.RegisterIfNotSet(dtypes.Int16, execIotaGeneric[int16])
	dispatchIota.RegisterIfNotSet(dtypes.Int32, execIotaGeneric[int32])
	dispatchIota.RegisterIfNotSet(dtypes.Int64, execIotaGeneric[int64])
	dispatchIota.RegisterIfNotSet(dtypes.Uint8, execIotaGeneric[uint8])
	dispatchIota.RegisterIfNotSet(dtypes.Uint16, execIotaGeneric[uint16])
	dispatchIota.RegisterIfNotSet(dtypes.Uint32, execIotaGeneric[uint32])
	dispatchIota.RegisterIfNotSet(dtypes.Uint64, execIotaGeneric[uint64])
	dispatchIota.RegisterIfNotSet(dtypes.Float32, execIotaGeneric[float32])
	dispatchIota.RegisterIfNotSet(dtypes.Float64, execIotaGeneric[float64])

	// DTypeDispatcher: dispatchGather
	dispatchGather.RegisterIfNotSet(dtypes.Int8, execGatherGeneric[int8])
	dispatchGather.RegisterIfNotSet(dtypes.Int16, execGatherGeneric[int16])
	dispatchGather.RegisterIfNotSet(dtypes.Int32, execGatherGeneric[int32])
	dispatchGather.RegisterIfNotSet(dtypes.Int64, execGatherGeneric[int64])
	dispatchGather.RegisterIfNotSet(dtypes.Uint8, execGatherGeneric[uint8])
	dispatchGather.RegisterIfNotSet(dtypes.Uint16, execGatherGeneric[uint16])
	dispatchGather.RegisterIfNotSet(dtypes.Uint32, execGatherGeneric[uint32])
	dispatchGather.RegisterIfNotSet(dtypes.Uint64, execGatherGeneric[uint64])

	// DTypeMap: dotGeneralFlatToBlockDTypeMap
	dotGeneralFlatToBlockDTypeMap.RegisterIfNotSet(dtypes.Int8, dgCopyFlatToBlockShape[int8])
	dotGeneralFlatToBlockDTypeMap.RegisterIfNotSet(dtypes.Int16, dgCopyFlatToBlockShape[int16])
	dotGeneralFlatToBlockDTypeMap.RegisterIfNotSet(dtypes.Int32, dgCopyFlatToBlockShape[int32])
	dotGeneralFlatToBlockDTypeMap.RegisterIfNotSet(dtypes.Int64, dgCopyFlatToBlockShape[int64])
	dotGeneralFlatToBlockDTypeMap.RegisterIfNotSet(dtypes.Uint8, dgCopyFlatToBlockShape[uint8])
	dotGeneralFlatToBlockDTypeMap.RegisterIfNotSet(dtypes.Uint16, dgCopyFlatToBlockShape[uint16])
	dotGeneralFlatToBlockDTypeMap.RegisterIfNotSet(dtypes.Uint32, dgCopyFlatToBlockShape[uint32])
	dotGeneralFlatToBlockDTypeMap.RegisterIfNotSet(dtypes.Uint64, dgCopyFlatToBlockShape[uint64])
	dotGeneralFlatToBlockDTypeMap.RegisterIfNotSet(dtypes.Float32, dgCopyFlatToBlockShape[float32])
	dotGeneralFlatToBlockDTypeMap.RegisterIfNotSet(dtypes.Float64, dgCopyFlatToBlockShape[float64])
	dotGeneralFlatToBlockDTypeMap.RegisterIfNotSet(dtypes.BFloat16, dgCopyFlatToBlockShape[bfloat16.BFloat16])

	// DTypeMap: dotGeneralOutputBlockToFlatDTypeMap
	dotGeneralOutputBlockToFlatDTypeMap.RegisterIfNotSet(dtypes.Int8, dgCopyOutputBlockToFlat[int8])
	dotGeneralOutputBlockToFlatDTypeMap.RegisterIfNotSet(dtypes.Int16, dgCopyOutputBlockToFlat[int16])
	dotGeneralOutputBlockToFlatDTypeMap.RegisterIfNotSet(dtypes.Int32, dgCopyOutputBlockToFlat[int32])
	dotGeneralOutputBlockToFlatDTypeMap.RegisterIfNotSet(dtypes.Int64, dgCopyOutputBlockToFlat[int64])
	dotGeneralOutputBlockToFlatDTypeMap.RegisterIfNotSet(dtypes.Uint8, dgCopyOutputBlockToFlat[uint8])
	dotGeneralOutputBlockToFlatDTypeMap.RegisterIfNotSet(dtypes.Uint16, dgCopyOutputBlockToFlat[uint16])
	dotGeneralOutputBlockToFlatDTypeMap.RegisterIfNotSet(dtypes.Uint32, dgCopyOutputBlockToFlat[uint32])
	dotGeneralOutputBlockToFlatDTypeMap.RegisterIfNotSet(dtypes.Uint64, dgCopyOutputBlockToFlat[uint64])
	dotGeneralOutputBlockToFlatDTypeMap.RegisterIfNotSet(dtypes.Float32, dgCopyOutputBlockToFlat[float32])
	dotGeneralOutputBlockToFlatDTypeMap.RegisterIfNotSet(dtypes.Float64, dgCopyOutputBlockToFlat[float64])

	// DTypeMap: dotGeneralKernelDTypeMap
	dotGeneralKernelDTypeMap.RegisterIfNotSet(dtypes.Int8, buildDotGeneralKernel[int8])
	dotGeneralKernelDTypeMap.RegisterIfNotSet(dtypes.Int16, buildDotGeneralKernel[int16])
	dotGeneralKernelDTypeMap.RegisterIfNotSet(dtypes.Int32, buildDotGeneralKernel[int32])
	dotGeneralKernelDTypeMap.RegisterIfNotSet(dtypes.Int64, buildDotGeneralKernel[int64])
	dotGeneralKernelDTypeMap.RegisterIfNotSet(dtypes.Uint8, buildDotGeneralKernel[uint8])
	dotGeneralKernelDTypeMap.RegisterIfNotSet(dtypes.Uint16, buildDotGeneralKernel[uint16])
	dotGeneralKernelDTypeMap.RegisterIfNotSet(dtypes.Uint32, buildDotGeneralKernel[uint32])
	dotGeneralKernelDTypeMap.RegisterIfNotSet(dtypes.Uint64, buildDotGeneralKernel[uint64])
	dotGeneralKernelDTypeMap.RegisterIfNotSet(dtypes.Float32, buildDotGeneralKernel[float32])
	dotGeneralKernelDTypeMap.RegisterIfNotSet(dtypes.Float64, buildDotGeneralKernel[float64])

	// DTypeMap: dotGeneralNormalizeShapeDTypeMap
	dotGeneralNormalizeShapeDTypeMap.RegisterIfNotSet(dtypes.Int8, dgNormalizeShape[int8])
	dotGeneralNormalizeShapeDTypeMap.RegisterIfNotSet(dtypes.Int16, dgNormalizeShape[int16])
	dotGeneralNormalizeShapeDTypeMap.RegisterIfNotSet(dtypes.Int32, dgNormalizeShape[int32])
	dotGeneralNormalizeShapeDTypeMap.RegisterIfNotSet(dtypes.Int64, dgNormalizeShape[int64])
	dotGeneralNormalizeShapeDTypeMap.RegisterIfNotSet(dtypes.Uint8, dgNormalizeShape[uint8])
	dotGeneralNormalizeShapeDTypeMap.RegisterIfNotSet(dtypes.Uint16, dgNormalizeShape[uint16])
	dotGeneralNormalizeShapeDTypeMap.RegisterIfNotSet(dtypes.Uint32, dgNormalizeShape[uint32])
	dotGeneralNormalizeShapeDTypeMap.RegisterIfNotSet(dtypes.Uint64, dgNormalizeShape[uint64])
	dotGeneralNormalizeShapeDTypeMap.RegisterIfNotSet(dtypes.Float32, dgNormalizeShape[float32])
	dotGeneralNormalizeShapeDTypeMap.RegisterIfNotSet(dtypes.Float64, dgNormalizeShape[float64])
	dotGeneralNormalizeShapeDTypeMap.RegisterIfNotSet(dtypes.BFloat16, dgNormalizeShape[bfloat16.BFloat16])

	// DTypeMap: dotGeneralNormalizedDTypeMap
	dotGeneralNormalizedDTypeMap.RegisterIfNotSet(dtypes.Int8, execNormalizedDotGeneralGeneric[int8])
	dotGeneralNormalizedDTypeMap.RegisterIfNotSet(dtypes.Int16, execNormalizedDotGeneralGeneric[int16])
	dotGeneralNormalizedDTypeMap.RegisterIfNotSet(dtypes.Int32, execNormalizedDotGeneralGeneric[int32])
	dotGeneralNormalizedDTypeMap.RegisterIfNotSet(dtypes.Int64, execNormalizedDotGeneralGeneric[int64])
	dotGeneralNormalizedDTypeMap.RegisterIfNotSet(dtypes.Uint8, execNormalizedDotGeneralGeneric[uint8])
	dotGeneralNormalizedDTypeMap.RegisterIfNotSet(dtypes.Uint16, execNormalizedDotGeneralGeneric[uint16])
	dotGeneralNormalizedDTypeMap.RegisterIfNotSet(dtypes.Uint32, execNormalizedDotGeneralGeneric[uint32])
	dotGeneralNormalizedDTypeMap.RegisterIfNotSet(dtypes.Uint64, execNormalizedDotGeneralGeneric[uint64])
	dotGeneralNormalizedDTypeMap.RegisterIfNotSet(dtypes.Float32, execNormalizedDotGeneralGeneric[float32])
	dotGeneralNormalizedDTypeMap.RegisterIfNotSet(dtypes.Float64, execNormalizedDotGeneralGeneric[float64])

	// DTypeMap: mutableBytesDTypeMap
	mutableBytesDTypeMap.RegisterIfNotSet(dtypes.Int8, mutableBytesGeneric[int8])
	mutableBytesDTypeMap.RegisterIfNotSet(dtypes.Int16, mutableBytesGeneric[int16])
	mutableBytesDTypeMap.RegisterIfNotSet(dtypes.Int32, mutableBytesGeneric[int32])
	mutableBytesDTypeMap.RegisterIfNotSet(dtypes.Int64, mutableBytesGeneric[int64])
	mutableBytesDTypeMap.RegisterIfNotSet(dtypes.Uint8, mutableBytesGeneric[uint8])
	mutableBytesDTypeMap.RegisterIfNotSet(dtypes.Uint16, mutableBytesGeneric[uint16])
	mutableBytesDTypeMap.RegisterIfNotSet(dtypes.Uint32, mutableBytesGeneric[uint32])
	mutableBytesDTypeMap.RegisterIfNotSet(dtypes.Uint64, mutableBytesGeneric[uint64])
	mutableBytesDTypeMap.RegisterIfNotSet(dtypes.Float32, mutableBytesGeneric[float32])
	mutableBytesDTypeMap.RegisterIfNotSet(dtypes.Float64, mutableBytesGeneric[float64])
	mutableBytesDTypeMap.RegisterIfNotSet(dtypes.BFloat16, mutableBytesGeneric[bfloat16.BFloat16])
	mutableBytesDTypeMap.RegisterIfNotSet(dtypes.Bool, mutableBytesGeneric[bool])

	// DTypeMap: fillBufferDTypeMap
	fillBufferDTypeMap.RegisterIfNotSet(dtypes.Int8, fillBufferGeneric[int8])
	fillBufferDTypeMap.RegisterIfNotSet(dtypes.Int16, fillBufferGeneric[int16])
	fillBufferDTypeMap.RegisterIfNotSet(dtypes.Int32, fillBufferGeneric[int32])
	fillBufferDTypeMap.RegisterIfNotSet(dtypes.Int64, fillBufferGeneric[int64])
	fillBufferDTypeMap.RegisterIfNotSet(dtypes.Uint8, fillBufferGeneric[uint8])
	fillBufferDTypeMap.RegisterIfNotSet(dtypes.Uint16, fillBufferGeneric[uint16])
	fillBufferDTypeMap.RegisterIfNotSet(dtypes.Uint32, fillBufferGeneric[uint32])
	fillBufferDTypeMap.RegisterIfNotSet(dtypes.Uint64, fillBufferGeneric[uint64])
	fillBufferDTypeMap.RegisterIfNotSet(dtypes.Float32, fillBufferGeneric[float32])
	fillBufferDTypeMap.RegisterIfNotSet(dtypes.Float64, fillBufferGeneric[float64])
	fillBufferDTypeMap.RegisterIfNotSet(dtypes.BFloat16, fillBufferGeneric[bfloat16.BFloat16])
	fillBufferDTypeMap.RegisterIfNotSet(dtypes.Bool, fillBufferGeneric[bool])

	// DTypeMap: reduceMaxDTypeMap
	reduceMaxDTypeMap.RegisterIfNotSet(dtypes.Int8, execReduceMaxGeneric[int8])
	reduceMaxDTypeMap.RegisterIfNotSet(dtypes.Int16, execReduceMaxGeneric[int16])
	reduceMaxDTypeMap.RegisterIfNotSet(dtypes.Int32, execReduceMaxGeneric[int32])
	reduceMaxDTypeMap.RegisterIfNotSet(dtypes.Int64, execReduceMaxGeneric[int64])
	reduceMaxDTypeMap.RegisterIfNotSet(dtypes.Uint8, execReduceMaxGeneric[uint8])
	reduceMaxDTypeMap.RegisterIfNotSet(dtypes.Uint16, execReduceMaxGeneric[uint16])
	reduceMaxDTypeMap.RegisterIfNotSet(dtypes.Uint32, execReduceMaxGeneric[uint32])
	reduceMaxDTypeMap.RegisterIfNotSet(dtypes.Uint64, execReduceMaxGeneric[uint64])
	reduceMaxDTypeMap.RegisterIfNotSet(dtypes.Float32, execReduceMaxGeneric[float32])
	reduceMaxDTypeMap.RegisterIfNotSet(dtypes.Float64, execReduceMaxGeneric[float64])

	// DTypeMap: reduceMinDTypeMap
	reduceMinDTypeMap.RegisterIfNotSet(dtypes.Int8, execReduceMinGeneric[int8])
	reduceMinDTypeMap.RegisterIfNotSet(dtypes.Int16, execReduceMinGeneric[int16])
	reduceMinDTypeMap.RegisterIfNotSet(dtypes.Int32, execReduceMinGeneric[int32])
	reduceMinDTypeMap.RegisterIfNotSet(dtypes.Int64, execReduceMinGeneric[int64])
	reduceMinDTypeMap.RegisterIfNotSet(dtypes.Uint8, execReduceMinGeneric[uint8])
	reduceMinDTypeMap.RegisterIfNotSet(dtypes.Uint16, execReduceMinGeneric[uint16])
	reduceMinDTypeMap.RegisterIfNotSet(dtypes.Uint32, execReduceMinGeneric[uint32])
	reduceMinDTypeMap.RegisterIfNotSet(dtypes.Uint64, execReduceMinGeneric[uint64])
	reduceMinDTypeMap.RegisterIfNotSet(dtypes.Float32, execReduceMinGeneric[float32])
	reduceMinDTypeMap.RegisterIfNotSet(dtypes.Float64, execReduceMinGeneric[float64])

	// DTypeMap: reduceSumDTypeMap
	reduceSumDTypeMap.RegisterIfNotSet(dtypes.Int8, execReduceSumGeneric[int8])
	reduceSumDTypeMap.RegisterIfNotSet(dtypes.Int16, execReduceSumGeneric[int16])
	reduceSumDTypeMap.RegisterIfNotSet(dtypes.Int32, execReduceSumGeneric[int32])
	reduceSumDTypeMap.RegisterIfNotSet(dtypes.Int64, execReduceSumGeneric[int64])
	reduceSumDTypeMap.RegisterIfNotSet(dtypes.Uint8, execReduceSumGeneric[uint8])
	reduceSumDTypeMap.RegisterIfNotSet(dtypes.Uint16, execReduceSumGeneric[uint16])
	reduceSumDTypeMap.RegisterIfNotSet(dtypes.Uint32, execReduceSumGeneric[uint32])
	reduceSumDTypeMap.RegisterIfNotSet(dtypes.Uint64, execReduceSumGeneric[uint64])
	reduceSumDTypeMap.RegisterIfNotSet(dtypes.Float32, execReduceSumGeneric[float32])
	reduceSumDTypeMap.RegisterIfNotSet(dtypes.Float64, execReduceSumGeneric[float64])

	// DTypeMap: reduceProductDTypeMap
	reduceProductDTypeMap.RegisterIfNotSet(dtypes.Int8, execReduceProductGeneric[int8])
	reduceProductDTypeMap.RegisterIfNotSet(dtypes.Int16, execReduceProductGeneric[int16])
	reduceProductDTypeMap.RegisterIfNotSet(dtypes.Int32, execReduceProductGeneric[int32])
	reduceProductDTypeMap.RegisterIfNotSet(dtypes.Int64, execReduceProductGeneric[int64])
	reduceProductDTypeMap.RegisterIfNotSet(dtypes.Uint8, execReduceProductGeneric[uint8])
	reduceProductDTypeMap.RegisterIfNotSet(dtypes.Uint16, execReduceProductGeneric[uint16])
	reduceProductDTypeMap.RegisterIfNotSet(dtypes.Uint32, execReduceProductGeneric[uint32])
	reduceProductDTypeMap.RegisterIfNotSet(dtypes.Uint64, execReduceProductGeneric[uint64])
	reduceProductDTypeMap.RegisterIfNotSet(dtypes.Float32, execReduceProductGeneric[float32])
	reduceProductDTypeMap.RegisterIfNotSet(dtypes.Float64, execReduceProductGeneric[float64])

	// DTypeMap: reduceBitwiseAndDTypeMap
	reduceBitwiseAndDTypeMap.RegisterIfNotSet(dtypes.Int8, execReduceBitwiseAndGeneric[int8])
	reduceBitwiseAndDTypeMap.RegisterIfNotSet(dtypes.Int16, execReduceBitwiseAndGeneric[int16])
	reduceBitwiseAndDTypeMap.RegisterIfNotSet(dtypes.Int32, execReduceBitwiseAndGeneric[int32])
	reduceBitwiseAndDTypeMap.RegisterIfNotSet(dtypes.Int64, execReduceBitwiseAndGeneric[int64])
	reduceBitwiseAndDTypeMap.RegisterIfNotSet(dtypes.Uint8, execReduceBitwiseAndGeneric[uint8])
	reduceBitwiseAndDTypeMap.RegisterIfNotSet(dtypes.Uint16, execReduceBitwiseAndGeneric[uint16])
	reduceBitwiseAndDTypeMap.RegisterIfNotSet(dtypes.Uint32, execReduceBitwiseAndGeneric[uint32])
	reduceBitwiseAndDTypeMap.RegisterIfNotSet(dtypes.Uint64, execReduceBitwiseAndGeneric[uint64])

	// DTypeMap: reduceBitwiseOrDTypeMap
	reduceBitwiseOrDTypeMap.RegisterIfNotSet(dtypes.Int8, execReduceBitwiseOrGeneric[int8])
	reduceBitwiseOrDTypeMap.RegisterIfNotSet(dtypes.Int16, execReduceBitwiseOrGeneric[int16])
	reduceBitwiseOrDTypeMap.RegisterIfNotSet(dtypes.Int32, execReduceBitwiseOrGeneric[int32])
	reduceBitwiseOrDTypeMap.RegisterIfNotSet(dtypes.Int64, execReduceBitwiseOrGeneric[int64])
	reduceBitwiseOrDTypeMap.RegisterIfNotSet(dtypes.Uint8, execReduceBitwiseOrGeneric[uint8])
	reduceBitwiseOrDTypeMap.RegisterIfNotSet(dtypes.Uint16, execReduceBitwiseOrGeneric[uint16])
	reduceBitwiseOrDTypeMap.RegisterIfNotSet(dtypes.Uint32, execReduceBitwiseOrGeneric[uint32])
	reduceBitwiseOrDTypeMap.RegisterIfNotSet(dtypes.Uint64, execReduceBitwiseOrGeneric[uint64])

	// DTypeMap: reduceBitwiseXorDTypeMap
	reduceBitwiseXorDTypeMap.RegisterIfNotSet(dtypes.Int8, execReduceBitwiseXorGeneric[int8])
	reduceBitwiseXorDTypeMap.RegisterIfNotSet(dtypes.Int16, execReduceBitwiseXorGeneric[int16])
	reduceBitwiseXorDTypeMap.RegisterIfNotSet(dtypes.Int32, execReduceBitwiseXorGeneric[int32])
	reduceBitwiseXorDTypeMap.RegisterIfNotSet(dtypes.Int64, execReduceBitwiseXorGeneric[int64])
	reduceBitwiseXorDTypeMap.RegisterIfNotSet(dtypes.Uint8, execReduceBitwiseXorGeneric[uint8])
	reduceBitwiseXorDTypeMap.RegisterIfNotSet(dtypes.Uint16, execReduceBitwiseXorGeneric[uint16])
	reduceBitwiseXorDTypeMap.RegisterIfNotSet(dtypes.Uint32, execReduceBitwiseXorGeneric[uint32])
	reduceBitwiseXorDTypeMap.RegisterIfNotSet(dtypes.Uint64, execReduceBitwiseXorGeneric[uint64])

	// DTypeMap: transposeDTypeMap
	transposeDTypeMap.RegisterIfNotSet(dtypes.Int8, execTransposeGeneric[int8])
	transposeDTypeMap.RegisterIfNotSet(dtypes.Int16, execTransposeGeneric[int16])
	transposeDTypeMap.RegisterIfNotSet(dtypes.Int32, execTransposeGeneric[int32])
	transposeDTypeMap.RegisterIfNotSet(dtypes.Int64, execTransposeGeneric[int64])
	transposeDTypeMap.RegisterIfNotSet(dtypes.Uint8, execTransposeGeneric[uint8])
	transposeDTypeMap.RegisterIfNotSet(dtypes.Uint16, execTransposeGeneric[uint16])
	transposeDTypeMap.RegisterIfNotSet(dtypes.Uint32, execTransposeGeneric[uint32])
	transposeDTypeMap.RegisterIfNotSet(dtypes.Uint64, execTransposeGeneric[uint64])
	transposeDTypeMap.RegisterIfNotSet(dtypes.Float32, execTransposeGeneric[float32])
	transposeDTypeMap.RegisterIfNotSet(dtypes.Float64, execTransposeGeneric[float64])
	transposeDTypeMap.RegisterIfNotSet(dtypes.BFloat16, execTransposeGeneric[bfloat16.BFloat16])
	transposeDTypeMap.RegisterIfNotSet(dtypes.Bool, execTransposeGeneric[bool])

	// DTypeMap: whereDTypeMap
	whereDTypeMap.RegisterIfNotSet(dtypes.Int8, execWhereGeneric[int8])
	whereDTypeMap.RegisterIfNotSet(dtypes.Int16, execWhereGeneric[int16])
	whereDTypeMap.RegisterIfNotSet(dtypes.Int32, execWhereGeneric[int32])
	whereDTypeMap.RegisterIfNotSet(dtypes.Int64, execWhereGeneric[int64])
	whereDTypeMap.RegisterIfNotSet(dtypes.Uint8, execWhereGeneric[uint8])
	whereDTypeMap.RegisterIfNotSet(dtypes.Uint16, execWhereGeneric[uint16])
	whereDTypeMap.RegisterIfNotSet(dtypes.Uint32, execWhereGeneric[uint32])
	whereDTypeMap.RegisterIfNotSet(dtypes.Uint64, execWhereGeneric[uint64])
	whereDTypeMap.RegisterIfNotSet(dtypes.Float32, execWhereGeneric[float32])
	whereDTypeMap.RegisterIfNotSet(dtypes.Float64, execWhereGeneric[float64])
	whereDTypeMap.RegisterIfNotSet(dtypes.BFloat16, execWhereGeneric[bfloat16.BFloat16])
	whereDTypeMap.RegisterIfNotSet(dtypes.Bool, execWhereGeneric[bool])

	// DTypeMap: combineMaxDTypeMap
	combineMaxDTypeMap.RegisterIfNotSet(dtypes.Int8, combineForScatterMaxGeneric[int8])
	combineMaxDTypeMap.RegisterIfNotSet(dtypes.Int16, combineForScatterMaxGeneric[int16])
	combineMaxDTypeMap.RegisterIfNotSet(dtypes.Int32, combineForScatterMaxGeneric[int32])
	combineMaxDTypeMap.RegisterIfNotSet(dtypes.Int64, combineForScatterMaxGeneric[int64])
	combineMaxDTypeMap.RegisterIfNotSet(dtypes.Uint8, combineForScatterMaxGeneric[uint8])
	combineMaxDTypeMap.RegisterIfNotSet(dtypes.Uint16, combineForScatterMaxGeneric[uint16])
	combineMaxDTypeMap.RegisterIfNotSet(dtypes.Uint32, combineForScatterMaxGeneric[uint32])
	combineMaxDTypeMap.RegisterIfNotSet(dtypes.Uint64, combineForScatterMaxGeneric[uint64])
	combineMaxDTypeMap.RegisterIfNotSet(dtypes.Float32, combineForScatterMaxGeneric[float32])
	combineMaxDTypeMap.RegisterIfNotSet(dtypes.Float64, combineForScatterMaxGeneric[float64])

	// DTypeMap: combineMinDTypeMap
	combineMinDTypeMap.RegisterIfNotSet(dtypes.Int8, combineForScatterMinGeneric[int8])
	combineMinDTypeMap.RegisterIfNotSet(dtypes.Int16, combineForScatterMinGeneric[int16])
	combineMinDTypeMap.RegisterIfNotSet(dtypes.Int32, combineForScatterMinGeneric[int32])
	combineMinDTypeMap.RegisterIfNotSet(dtypes.Int64, combineForScatterMinGeneric[int64])
	combineMinDTypeMap.RegisterIfNotSet(dtypes.Uint8, combineForScatterMinGeneric[uint8])
	combineMinDTypeMap.RegisterIfNotSet(dtypes.Uint16, combineForScatterMinGeneric[uint16])
	combineMinDTypeMap.RegisterIfNotSet(dtypes.Uint32, combineForScatterMinGeneric[uint32])
	combineMinDTypeMap.RegisterIfNotSet(dtypes.Uint64, combineForScatterMinGeneric[uint64])
	combineMinDTypeMap.RegisterIfNotSet(dtypes.Float32, combineForScatterMinGeneric[float32])
	combineMinDTypeMap.RegisterIfNotSet(dtypes.Float64, combineForScatterMinGeneric[float64])

	// DTypeMap: combineSumDTypeMap
	combineSumDTypeMap.RegisterIfNotSet(dtypes.Int8, combineForScatterSumGeneric[int8])
	combineSumDTypeMap.RegisterIfNotSet(dtypes.Int16, combineForScatterSumGeneric[int16])
	combineSumDTypeMap.RegisterIfNotSet(dtypes.Int32, combineForScatterSumGeneric[int32])
	combineSumDTypeMap.RegisterIfNotSet(dtypes.Int64, combineForScatterSumGeneric[int64])
	combineSumDTypeMap.RegisterIfNotSet(dtypes.Uint8, combineForScatterSumGeneric[uint8])
	combineSumDTypeMap.RegisterIfNotSet(dtypes.Uint16, combineForScatterSumGeneric[uint16])
	combineSumDTypeMap.RegisterIfNotSet(dtypes.Uint32, combineForScatterSumGeneric[uint32])
	combineSumDTypeMap.RegisterIfNotSet(dtypes.Uint64, combineForScatterSumGeneric[uint64])
	combineSumDTypeMap.RegisterIfNotSet(dtypes.Float32, combineForScatterSumGeneric[float32])
	combineSumDTypeMap.RegisterIfNotSet(dtypes.Float64, combineForScatterSumGeneric[float64])

	// DTypeMap: scatterDTypeMap
	scatterDTypeMap.RegisterIfNotSet(dtypes.Int8, execScatterGeneric[int8])
	scatterDTypeMap.RegisterIfNotSet(dtypes.Int16, execScatterGeneric[int16])
	scatterDTypeMap.RegisterIfNotSet(dtypes.Int32, execScatterGeneric[int32])
	scatterDTypeMap.RegisterIfNotSet(dtypes.Int64, execScatterGeneric[int64])
	scatterDTypeMap.RegisterIfNotSet(dtypes.Uint8, execScatterGeneric[uint8])
	scatterDTypeMap.RegisterIfNotSet(dtypes.Uint16, execScatterGeneric[uint16])
	scatterDTypeMap.RegisterIfNotSet(dtypes.Uint32, execScatterGeneric[uint32])
	scatterDTypeMap.RegisterIfNotSet(dtypes.Uint64, execScatterGeneric[uint64])
	scatterDTypeMap.RegisterIfNotSet(dtypes.Float32, execScatterGeneric[float32])
	scatterDTypeMap.RegisterIfNotSet(dtypes.Float64, execScatterGeneric[float64])
	scatterDTypeMap.RegisterIfNotSet(dtypes.BFloat16, execScatterGeneric[bfloat16.BFloat16])

	// DTypeMap: dereferenceIntsDTypeMap
	dereferenceIntsDTypeMap.RegisterIfNotSet(dtypes.Int8, dereferenceIntsGeneric[int8])
	dereferenceIntsDTypeMap.RegisterIfNotSet(dtypes.Int16, dereferenceIntsGeneric[int16])
	dereferenceIntsDTypeMap.RegisterIfNotSet(dtypes.Int32, dereferenceIntsGeneric[int32])
	dereferenceIntsDTypeMap.RegisterIfNotSet(dtypes.Int64, dereferenceIntsGeneric[int64])
	dereferenceIntsDTypeMap.RegisterIfNotSet(dtypes.Uint8, dereferenceIntsGeneric[uint8])
	dereferenceIntsDTypeMap.RegisterIfNotSet(dtypes.Uint16, dereferenceIntsGeneric[uint16])
	dereferenceIntsDTypeMap.RegisterIfNotSet(dtypes.Uint32, dereferenceIntsGeneric[uint32])
	dereferenceIntsDTypeMap.RegisterIfNotSet(dtypes.Uint64, dereferenceIntsGeneric[uint64])

	// DTypeMap: sliceDTypeMap
	sliceDTypeMap.RegisterIfNotSet(dtypes.Int8, execSliceGeneric[int8])
	sliceDTypeMap.RegisterIfNotSet(dtypes.Int16, execSliceGeneric[int16])
	sliceDTypeMap.RegisterIfNotSet(dtypes.Int32, execSliceGeneric[int32])
	sliceDTypeMap.RegisterIfNotSet(dtypes.Int64, execSliceGeneric[int64])
	sliceDTypeMap.RegisterIfNotSet(dtypes.Uint8, execSliceGeneric[uint8])
	sliceDTypeMap.RegisterIfNotSet(dtypes.Uint16, execSliceGeneric[uint16])
	sliceDTypeMap.RegisterIfNotSet(dtypes.Uint32, execSliceGeneric[uint32])
	sliceDTypeMap.RegisterIfNotSet(dtypes.Uint64, execSliceGeneric[uint64])
	sliceDTypeMap.RegisterIfNotSet(dtypes.Float32, execSliceGeneric[float32])
	sliceDTypeMap.RegisterIfNotSet(dtypes.Float64, execSliceGeneric[float64])
	sliceDTypeMap.RegisterIfNotSet(dtypes.BFloat16, execSliceGeneric[bfloat16.BFloat16])
	sliceDTypeMap.RegisterIfNotSet(dtypes.Bool, execSliceGeneric[bool])

	// DTypeMap: argMinMaxDTypeMap
	argMinMaxDTypeMap.RegisterIfNotSet(dtypes.Int8, execArgMinMaxGeneric[int8])
	argMinMaxDTypeMap.RegisterIfNotSet(dtypes.Int16, execArgMinMaxGeneric[int16])
	argMinMaxDTypeMap.RegisterIfNotSet(dtypes.Int32, execArgMinMaxGeneric[int32])
	argMinMaxDTypeMap.RegisterIfNotSet(dtypes.Int64, execArgMinMaxGeneric[int64])
	argMinMaxDTypeMap.RegisterIfNotSet(dtypes.Uint8, execArgMinMaxGeneric[uint8])
	argMinMaxDTypeMap.RegisterIfNotSet(dtypes.Uint16, execArgMinMaxGeneric[uint16])
	argMinMaxDTypeMap.RegisterIfNotSet(dtypes.Uint32, execArgMinMaxGeneric[uint32])
	argMinMaxDTypeMap.RegisterIfNotSet(dtypes.Uint64, execArgMinMaxGeneric[uint64])
	argMinMaxDTypeMap.RegisterIfNotSet(dtypes.Float32, execArgMinMaxGeneric[float32])
	argMinMaxDTypeMap.RegisterIfNotSet(dtypes.Float64, execArgMinMaxGeneric[float64])

	// DTypeMap: argMinMaxCopyIntsDTypeMap
	argMinMaxCopyIntsDTypeMap.RegisterIfNotSet(dtypes.Int8, buildArgMinMaxCopyIntsFn[int8])
	argMinMaxCopyIntsDTypeMap.RegisterIfNotSet(dtypes.Int16, buildArgMinMaxCopyIntsFn[int16])
	argMinMaxCopyIntsDTypeMap.RegisterIfNotSet(dtypes.Int32, buildArgMinMaxCopyIntsFn[int32])
	argMinMaxCopyIntsDTypeMap.RegisterIfNotSet(dtypes.Int64, buildArgMinMaxCopyIntsFn[int64])
	argMinMaxCopyIntsDTypeMap.RegisterIfNotSet(dtypes.Uint8, buildArgMinMaxCopyIntsFn[uint8])
	argMinMaxCopyIntsDTypeMap.RegisterIfNotSet(dtypes.Uint16, buildArgMinMaxCopyIntsFn[uint16])
	argMinMaxCopyIntsDTypeMap.RegisterIfNotSet(dtypes.Uint32, buildArgMinMaxCopyIntsFn[uint32])
	argMinMaxCopyIntsDTypeMap.RegisterIfNotSet(dtypes.Uint64, buildArgMinMaxCopyIntsFn[uint64])

	// DTypeMap: reduceWindowMaxDTypeMap
	reduceWindowMaxDTypeMap.RegisterIfNotSet(dtypes.Int8, reduceWindowMaxBuildUpdateFn[int8])
	reduceWindowMaxDTypeMap.RegisterIfNotSet(dtypes.Int16, reduceWindowMaxBuildUpdateFn[int16])
	reduceWindowMaxDTypeMap.RegisterIfNotSet(dtypes.Int32, reduceWindowMaxBuildUpdateFn[int32])
	reduceWindowMaxDTypeMap.RegisterIfNotSet(dtypes.Int64, reduceWindowMaxBuildUpdateFn[int64])
	reduceWindowMaxDTypeMap.RegisterIfNotSet(dtypes.Uint8, reduceWindowMaxBuildUpdateFn[uint8])
	reduceWindowMaxDTypeMap.RegisterIfNotSet(dtypes.Uint16, reduceWindowMaxBuildUpdateFn[uint16])
	reduceWindowMaxDTypeMap.RegisterIfNotSet(dtypes.Uint32, reduceWindowMaxBuildUpdateFn[uint32])
	reduceWindowMaxDTypeMap.RegisterIfNotSet(dtypes.Uint64, reduceWindowMaxBuildUpdateFn[uint64])
	reduceWindowMaxDTypeMap.RegisterIfNotSet(dtypes.Float32, reduceWindowMaxBuildUpdateFn[float32])
	reduceWindowMaxDTypeMap.RegisterIfNotSet(dtypes.Float64, reduceWindowMaxBuildUpdateFn[float64])

	// DTypeMap: reduceWindowMinDTypeMap
	reduceWindowMinDTypeMap.RegisterIfNotSet(dtypes.Int8, reduceWindowMinBuildUpdateFn[int8])
	reduceWindowMinDTypeMap.RegisterIfNotSet(dtypes.Int16, reduceWindowMinBuildUpdateFn[int16])
	reduceWindowMinDTypeMap.RegisterIfNotSet(dtypes.Int32, reduceWindowMinBuildUpdateFn[int32])
	reduceWindowMinDTypeMap.RegisterIfNotSet(dtypes.Int64, reduceWindowMinBuildUpdateFn[int64])
	reduceWindowMinDTypeMap.RegisterIfNotSet(dtypes.Uint8, reduceWindowMinBuildUpdateFn[uint8])
	reduceWindowMinDTypeMap.RegisterIfNotSet(dtypes.Uint16, reduceWindowMinBuildUpdateFn[uint16])
	reduceWindowMinDTypeMap.RegisterIfNotSet(dtypes.Uint32, reduceWindowMinBuildUpdateFn[uint32])
	reduceWindowMinDTypeMap.RegisterIfNotSet(dtypes.Uint64, reduceWindowMinBuildUpdateFn[uint64])
	reduceWindowMinDTypeMap.RegisterIfNotSet(dtypes.Float32, reduceWindowMinBuildUpdateFn[float32])
	reduceWindowMinDTypeMap.RegisterIfNotSet(dtypes.Float64, reduceWindowMinBuildUpdateFn[float64])

	// DTypeMap: reduceWindowSumDTypeMap
	reduceWindowSumDTypeMap.RegisterIfNotSet(dtypes.Int8, reduceWindowSumBuildUpdateFn[int8])
	reduceWindowSumDTypeMap.RegisterIfNotSet(dtypes.Int16, reduceWindowSumBuildUpdateFn[int16])
	reduceWindowSumDTypeMap.RegisterIfNotSet(dtypes.Int32, reduceWindowSumBuildUpdateFn[int32])
	reduceWindowSumDTypeMap.RegisterIfNotSet(dtypes.Int64, reduceWindowSumBuildUpdateFn[int64])
	reduceWindowSumDTypeMap.RegisterIfNotSet(dtypes.Uint8, reduceWindowSumBuildUpdateFn[uint8])
	reduceWindowSumDTypeMap.RegisterIfNotSet(dtypes.Uint16, reduceWindowSumBuildUpdateFn[uint16])
	reduceWindowSumDTypeMap.RegisterIfNotSet(dtypes.Uint32, reduceWindowSumBuildUpdateFn[uint32])
	reduceWindowSumDTypeMap.RegisterIfNotSet(dtypes.Uint64, reduceWindowSumBuildUpdateFn[uint64])
	reduceWindowSumDTypeMap.RegisterIfNotSet(dtypes.Float32, reduceWindowSumBuildUpdateFn[float32])
	reduceWindowSumDTypeMap.RegisterIfNotSet(dtypes.Float64, reduceWindowSumBuildUpdateFn[float64])

	// DTypeMap: reduceWindowProductDTypeMap
	reduceWindowProductDTypeMap.RegisterIfNotSet(dtypes.Int8, reduceWindowProductBuildUpdateFn[int8])
	reduceWindowProductDTypeMap.RegisterIfNotSet(dtypes.Int16, reduceWindowProductBuildUpdateFn[int16])
	reduceWindowProductDTypeMap.RegisterIfNotSet(dtypes.Int32, reduceWindowProductBuildUpdateFn[int32])
	reduceWindowProductDTypeMap.RegisterIfNotSet(dtypes.Int64, reduceWindowProductBuildUpdateFn[int64])
	reduceWindowProductDTypeMap.RegisterIfNotSet(dtypes.Uint8, reduceWindowProductBuildUpdateFn[uint8])
	reduceWindowProductDTypeMap.RegisterIfNotSet(dtypes.Uint16, reduceWindowProductBuildUpdateFn[uint16])
	reduceWindowProductDTypeMap.RegisterIfNotSet(dtypes.Uint32, reduceWindowProductBuildUpdateFn[uint32])
	reduceWindowProductDTypeMap.RegisterIfNotSet(dtypes.Uint64, reduceWindowProductBuildUpdateFn[uint64])
	reduceWindowProductDTypeMap.RegisterIfNotSet(dtypes.Float32, reduceWindowProductBuildUpdateFn[float32])
	reduceWindowProductDTypeMap.RegisterIfNotSet(dtypes.Float64, reduceWindowProductBuildUpdateFn[float64])

	// DTypePairMap: convertDTypePairMap
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int8, dtypes.Int8, execConvertDTypeGeneric[int8, int8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int8, dtypes.Int16, execConvertDTypeGeneric[int8, int16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int8, dtypes.Int32, execConvertDTypeGeneric[int8, int32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int8, dtypes.Int64, execConvertDTypeGeneric[int8, int64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int8, dtypes.Uint8, execConvertDTypeGeneric[int8, uint8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int8, dtypes.Uint16, execConvertDTypeGeneric[int8, uint16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int8, dtypes.Uint32, execConvertDTypeGeneric[int8, uint32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int8, dtypes.Uint64, execConvertDTypeGeneric[int8, uint64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int8, dtypes.Float32, execConvertDTypeGeneric[int8, float32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int8, dtypes.Float64, execConvertDTypeGeneric[int8, float64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int16, dtypes.Int8, execConvertDTypeGeneric[int16, int8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int16, dtypes.Int16, execConvertDTypeGeneric[int16, int16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int16, dtypes.Int32, execConvertDTypeGeneric[int16, int32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int16, dtypes.Int64, execConvertDTypeGeneric[int16, int64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int16, dtypes.Uint8, execConvertDTypeGeneric[int16, uint8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int16, dtypes.Uint16, execConvertDTypeGeneric[int16, uint16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int16, dtypes.Uint32, execConvertDTypeGeneric[int16, uint32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int16, dtypes.Uint64, execConvertDTypeGeneric[int16, uint64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int16, dtypes.Float32, execConvertDTypeGeneric[int16, float32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int16, dtypes.Float64, execConvertDTypeGeneric[int16, float64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int32, dtypes.Int8, execConvertDTypeGeneric[int32, int8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int32, dtypes.Int16, execConvertDTypeGeneric[int32, int16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int32, dtypes.Int32, execConvertDTypeGeneric[int32, int32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int32, dtypes.Int64, execConvertDTypeGeneric[int32, int64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int32, dtypes.Uint8, execConvertDTypeGeneric[int32, uint8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int32, dtypes.Uint16, execConvertDTypeGeneric[int32, uint16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int32, dtypes.Uint32, execConvertDTypeGeneric[int32, uint32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int32, dtypes.Uint64, execConvertDTypeGeneric[int32, uint64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int32, dtypes.Float32, execConvertDTypeGeneric[int32, float32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int32, dtypes.Float64, execConvertDTypeGeneric[int32, float64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int64, dtypes.Int8, execConvertDTypeGeneric[int64, int8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int64, dtypes.Int16, execConvertDTypeGeneric[int64, int16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int64, dtypes.Int32, execConvertDTypeGeneric[int64, int32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int64, dtypes.Int64, execConvertDTypeGeneric[int64, int64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int64, dtypes.Uint8, execConvertDTypeGeneric[int64, uint8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int64, dtypes.Uint16, execConvertDTypeGeneric[int64, uint16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int64, dtypes.Uint32, execConvertDTypeGeneric[int64, uint32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int64, dtypes.Uint64, execConvertDTypeGeneric[int64, uint64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int64, dtypes.Float32, execConvertDTypeGeneric[int64, float32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int64, dtypes.Float64, execConvertDTypeGeneric[int64, float64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint8, dtypes.Int8, execConvertDTypeGeneric[uint8, int8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint8, dtypes.Int16, execConvertDTypeGeneric[uint8, int16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint8, dtypes.Int32, execConvertDTypeGeneric[uint8, int32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint8, dtypes.Int64, execConvertDTypeGeneric[uint8, int64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint8, dtypes.Uint8, execConvertDTypeGeneric[uint8, uint8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint8, dtypes.Uint16, execConvertDTypeGeneric[uint8, uint16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint8, dtypes.Uint32, execConvertDTypeGeneric[uint8, uint32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint8, dtypes.Uint64, execConvertDTypeGeneric[uint8, uint64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint8, dtypes.Float32, execConvertDTypeGeneric[uint8, float32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint8, dtypes.Float64, execConvertDTypeGeneric[uint8, float64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint16, dtypes.Int8, execConvertDTypeGeneric[uint16, int8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint16, dtypes.Int16, execConvertDTypeGeneric[uint16, int16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint16, dtypes.Int32, execConvertDTypeGeneric[uint16, int32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint16, dtypes.Int64, execConvertDTypeGeneric[uint16, int64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint16, dtypes.Uint8, execConvertDTypeGeneric[uint16, uint8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint16, dtypes.Uint16, execConvertDTypeGeneric[uint16, uint16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint16, dtypes.Uint32, execConvertDTypeGeneric[uint16, uint32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint16, dtypes.Uint64, execConvertDTypeGeneric[uint16, uint64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint16, dtypes.Float32, execConvertDTypeGeneric[uint16, float32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint16, dtypes.Float64, execConvertDTypeGeneric[uint16, float64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint32, dtypes.Int8, execConvertDTypeGeneric[uint32, int8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint32, dtypes.Int16, execConvertDTypeGeneric[uint32, int16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint32, dtypes.Int32, execConvertDTypeGeneric[uint32, int32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint32, dtypes.Int64, execConvertDTypeGeneric[uint32, int64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint32, dtypes.Uint8, execConvertDTypeGeneric[uint32, uint8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint32, dtypes.Uint16, execConvertDTypeGeneric[uint32, uint16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint32, dtypes.Uint32, execConvertDTypeGeneric[uint32, uint32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint32, dtypes.Uint64, execConvertDTypeGeneric[uint32, uint64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint32, dtypes.Float32, execConvertDTypeGeneric[uint32, float32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint32, dtypes.Float64, execConvertDTypeGeneric[uint32, float64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint64, dtypes.Int8, execConvertDTypeGeneric[uint64, int8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint64, dtypes.Int16, execConvertDTypeGeneric[uint64, int16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint64, dtypes.Int32, execConvertDTypeGeneric[uint64, int32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint64, dtypes.Int64, execConvertDTypeGeneric[uint64, int64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint64, dtypes.Uint8, execConvertDTypeGeneric[uint64, uint8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint64, dtypes.Uint16, execConvertDTypeGeneric[uint64, uint16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint64, dtypes.Uint32, execConvertDTypeGeneric[uint64, uint32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint64, dtypes.Uint64, execConvertDTypeGeneric[uint64, uint64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint64, dtypes.Float32, execConvertDTypeGeneric[uint64, float32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint64, dtypes.Float64, execConvertDTypeGeneric[uint64, float64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float32, dtypes.Int8, execConvertDTypeGeneric[float32, int8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float32, dtypes.Int16, execConvertDTypeGeneric[float32, int16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float32, dtypes.Int32, execConvertDTypeGeneric[float32, int32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float32, dtypes.Int64, execConvertDTypeGeneric[float32, int64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float32, dtypes.Uint8, execConvertDTypeGeneric[float32, uint8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float32, dtypes.Uint16, execConvertDTypeGeneric[float32, uint16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float32, dtypes.Uint32, execConvertDTypeGeneric[float32, uint32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float32, dtypes.Uint64, execConvertDTypeGeneric[float32, uint64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float32, dtypes.Float32, execConvertDTypeGeneric[float32, float32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float32, dtypes.Float64, execConvertDTypeGeneric[float32, float64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float64, dtypes.Int8, execConvertDTypeGeneric[float64, int8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float64, dtypes.Int16, execConvertDTypeGeneric[float64, int16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float64, dtypes.Int32, execConvertDTypeGeneric[float64, int32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float64, dtypes.Int64, execConvertDTypeGeneric[float64, int64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float64, dtypes.Uint8, execConvertDTypeGeneric[float64, uint8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float64, dtypes.Uint16, execConvertDTypeGeneric[float64, uint16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float64, dtypes.Uint32, execConvertDTypeGeneric[float64, uint32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float64, dtypes.Uint64, execConvertDTypeGeneric[float64, uint64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float64, dtypes.Float32, execConvertDTypeGeneric[float64, float32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float64, dtypes.Float64, execConvertDTypeGeneric[float64, float64])

	// DTypePairMap: convertDTypePairMap
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int8, dtypes.BFloat16, execConvertDTypeToBFloat16[int8, bfloat16.BFloat16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int16, dtypes.BFloat16, execConvertDTypeToBFloat16[int16, bfloat16.BFloat16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int32, dtypes.BFloat16, execConvertDTypeToBFloat16[int32, bfloat16.BFloat16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int64, dtypes.BFloat16, execConvertDTypeToBFloat16[int64, bfloat16.BFloat16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint8, dtypes.BFloat16, execConvertDTypeToBFloat16[uint8, bfloat16.BFloat16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint16, dtypes.BFloat16, execConvertDTypeToBFloat16[uint16, bfloat16.BFloat16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint32, dtypes.BFloat16, execConvertDTypeToBFloat16[uint32, bfloat16.BFloat16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint64, dtypes.BFloat16, execConvertDTypeToBFloat16[uint64, bfloat16.BFloat16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float32, dtypes.BFloat16, execConvertDTypeToBFloat16[float32, bfloat16.BFloat16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float64, dtypes.BFloat16, execConvertDTypeToBFloat16[float64, bfloat16.BFloat16])

	// DTypePairMap: convertDTypePairMap
	convertDTypePairMap.RegisterIfNotSet(dtypes.BFloat16, dtypes.Int8, execConvertDTypeFromBFloat16[bfloat16.BFloat16, int8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.BFloat16, dtypes.Int16, execConvertDTypeFromBFloat16[bfloat16.BFloat16, int16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.BFloat16, dtypes.Int32, execConvertDTypeFromBFloat16[bfloat16.BFloat16, int32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.BFloat16, dtypes.Int64, execConvertDTypeFromBFloat16[bfloat16.BFloat16, int64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.BFloat16, dtypes.Uint8, execConvertDTypeFromBFloat16[bfloat16.BFloat16, uint8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.BFloat16, dtypes.Uint16, execConvertDTypeFromBFloat16[bfloat16.BFloat16, uint16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.BFloat16, dtypes.Uint32, execConvertDTypeFromBFloat16[bfloat16.BFloat16, uint32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.BFloat16, dtypes.Uint64, execConvertDTypeFromBFloat16[bfloat16.BFloat16, uint64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.BFloat16, dtypes.Float32, execConvertDTypeFromBFloat16[bfloat16.BFloat16, float32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.BFloat16, dtypes.Float64, execConvertDTypeFromBFloat16[bfloat16.BFloat16, float64])

	// DTypePairMap: convertDTypePairMap
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int8, dtypes.Bool, execConvertDTypeToBool[int8, bool])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int16, dtypes.Bool, execConvertDTypeToBool[int16, bool])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int32, dtypes.Bool, execConvertDTypeToBool[int32, bool])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Int64, dtypes.Bool, execConvertDTypeToBool[int64, bool])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint8, dtypes.Bool, execConvertDTypeToBool[uint8, bool])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint16, dtypes.Bool, execConvertDTypeToBool[uint16, bool])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint32, dtypes.Bool, execConvertDTypeToBool[uint32, bool])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Uint64, dtypes.Bool, execConvertDTypeToBool[uint64, bool])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float32, dtypes.Bool, execConvertDTypeToBool[float32, bool])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Float64, dtypes.Bool, execConvertDTypeToBool[float64, bool])

	// DTypePairMap: convertDTypePairMap
	convertDTypePairMap.RegisterIfNotSet(dtypes.Bool, dtypes.Int8, execConvertDTypeFromBool[bool, int8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Bool, dtypes.Int16, execConvertDTypeFromBool[bool, int16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Bool, dtypes.Int32, execConvertDTypeFromBool[bool, int32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Bool, dtypes.Int64, execConvertDTypeFromBool[bool, int64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Bool, dtypes.Uint8, execConvertDTypeFromBool[bool, uint8])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Bool, dtypes.Uint16, execConvertDTypeFromBool[bool, uint16])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Bool, dtypes.Uint32, execConvertDTypeFromBool[bool, uint32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Bool, dtypes.Uint64, execConvertDTypeFromBool[bool, uint64])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Bool, dtypes.Float32, execConvertDTypeFromBool[bool, float32])
	convertDTypePairMap.RegisterIfNotSet(dtypes.Bool, dtypes.Float64, execConvertDTypeFromBool[bool, float64])

}
