// Code generated by "stringer -type=DType"; DO NOT EDIT.

package shapes

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidDType-0]
	_ = x[Bool-1]
	_ = x[Int8-2]
	_ = x[Int16-3]
	_ = x[Int32-4]
	_ = x[Int64-5]
	_ = x[UInt8-6]
	_ = x[UInt16-7]
	_ = x[UInt32-8]
	_ = x[UInt64-9]
	_ = x[Float16-10]
	_ = x[Float32-11]
	_ = x[Float64-12]
	_ = x[BFloat16-16]
	_ = x[Complex64-15]
	_ = x[Complex128-18]
	_ = x[Tuple-13]
	_ = x[OpaqueType-14]
	_ = x[Token-17]
}

const _DType_name = "InvalidDTypeBoolInt8Int16Int32Int64UInt8UInt16UInt32UInt64Float16Float32Float64TupleOpaqueTypeComplex64BFloat16TokenComplex128"

var _DType_index = [...]uint8{0, 12, 16, 20, 25, 30, 35, 40, 46, 52, 58, 65, 72, 79, 84, 94, 103, 111, 116, 126}

func (i DType) String() string {
	if i < 0 || i >= DType(len(_DType_index)-1) {
		return "DType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DType_name[_DType_index[i]:_DType_index[i+1]]
}
